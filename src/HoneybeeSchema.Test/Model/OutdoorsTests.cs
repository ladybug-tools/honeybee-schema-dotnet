/* 
 * Honeybee Model Schema
 *
 * This is the documentation for Honeybee model schema.
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: info@ladybug.tools
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;

using HoneybeeSchema;
using System.Reflection;
using Newtonsoft.Json;

namespace HoneybeeSchema.Test
{
    /// <summary>
    ///  Class for testing Outdoors
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class OutdoorsTests
    {
        private Outdoors instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new Outdoors();
            instance.SunExposure = false;
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Outdoors
        /// </summary>
        [Test]
        public void OutdoorsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" Outdoors
            //Assert.IsInstanceOf(typeof(Outdoors), instance);
        }


        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'SunExposure'
        /// </summary>
        [Test]
        public void SunExposureTest()
        {
            Assert.IsFalse(this.instance.SunExposure);
        }
        /// <summary>
        /// Test the property 'WindExposure'
        /// </summary>
        [Test]
        public void WindExposureTest()
        {
            Assert.IsTrue(this.instance.WindExposure);
        }
        /// <summary>
        /// Test the property 'ViewFactor'
        /// </summary>
        [Test]
        public void ViewFactorTest()
        {
            var vF = this.instance.ViewFactor.Obj;
            Assert.IsTrue(vF is Autocalculate);
        }

        /// <summary>
        /// Test the ToJson with a ViewFactor number
        /// </summary>
        [Test]
        public void ToJsonViewFactorTest()
        {
            this.instance.ViewFactor = 0.5;
            var j = this.instance.ToJson();

            var obj = Outdoors.FromJson(j);
            Assert.IsFalse(obj.SunExposure);

            var vF = obj.ViewFactor;
            Assert.IsTrue((double)vF.Obj == 0.5);
        }

        /// <summary>
        /// Test the ToJson with a default instance
        /// </summary>
        [Test]
        public void ToJsonTest()
        {
            var j = this.instance.ToJson();

            var obj = Outdoors.FromJson(j);

            var vF = obj.ViewFactor.Obj;
            Assert.IsTrue(vF is Autocalculate);
        }

    }

}
