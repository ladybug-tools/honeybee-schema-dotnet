{
    "openapi": "3.0.2",
    "servers": [],
    "info": {
        "description": "Honeybee validation-report schema.",
        "version": "1.50.0",
        "title": "Honeybee Validation Report Schema",
        "contact": {
            "name": "Ladybug Tools",
            "email": "info@ladybug.tools",
            "url": "https://github.com/ladybug-tools/honeybee-schema"
        },
        "x-logo": {
            "url": "https://www.ladybug.tools/assets/img/honeybee-large.png",
            "altText": "Honeybee logo"
        },
        "license": {
            "name": "BSD",
            "url": "https://github.com/ladybug-tools-in2/honeybee-schema/blob/master/LICENSE"
        }
    },
    "externalDocs": {
        "description": "OpenAPI Specification with Inheritance",
        "url": "./validation-report_inheritance.json"
    },
    "tags": [
        {
            "name": "extensiontypes_model",
            "x-displayName": "ExtensionTypes",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ExtensionTypes\" />\n"
        },
        {
            "name": "objecttypes_model",
            "x-displayName": "ObjectTypes",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ObjectTypes\" />\n"
        },
        {
            "name": "parentobject_model",
            "x-displayName": "ParentObject",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ParentObject\" />\n"
        },
        {
            "name": "parentobjecttypes_model",
            "x-displayName": "ParentObjectTypes",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ParentObjectTypes\" />\n"
        },
        {
            "name": "validationerror_model",
            "x-displayName": "ValidationError",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ValidationError\" />\n"
        },
        {
            "name": "validationreport_model",
            "x-displayName": "ValidationReport",
            "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ValidationReport\" />\n"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Models",
            "tags": [
                "extensiontypes_model",
                "objecttypes_model",
                "parentobject_model",
                "parentobjecttypes_model",
                "validationerror_model",
                "validationreport_model"
            ]
        }
    ],
    "paths": {},
    "components": {
        "schemas": {
            "ExtensionTypes": {
                "title": "ExtensionTypes",
                "description": "Types of Honeybee extensions.",
                "enum": [
                    "Core",
                    "Radiance",
                    "Energy"
                ],
                "type": "string"
            },
            "ObjectTypes": {
                "title": "ObjectTypes",
                "description": "Types of Honeybee objects.",
                "enum": [
                    "Shade",
                    "Aperture",
                    "Door",
                    "Face",
                    "Room",
                    "SensorGrid",
                    "View",
                    "Modifier",
                    "ModifierSet",
                    "Material",
                    "Construction",
                    "ConstructionSet",
                    "ScheduleTypeLimit",
                    "Schedule",
                    "ProgramType",
                    "HVAC",
                    "SHW"
                ],
                "type": "string"
            },
            "ParentObjectTypes": {
                "title": "ParentObjectTypes",
                "description": "Types of Honeybee objects that can be parents.",
                "enum": [
                    "Aperture",
                    "Door",
                    "Face",
                    "Room"
                ],
                "type": "string"
            },
            "ParentObject": {
                "title": "ParentObject",
                "type": "object",
                "properties": {
                    "type": {
                        "description": "Text for the type of object that the parent is.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ParentObjectTypes"
                            }
                        ],
                        "readOnly": true
                    },
                    "id": {
                        "title": "Id",
                        "description": "Text string for the unique ID of the parent object.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^[.A-Za-z0-9_-]+$",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Display name of the parent object.",
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "id"
                ]
            },
            "ValidationError": {
                "title": "ValidationError",
                "type": "object",
                "properties": {
                    "code": {
                        "title": "Code",
                        "description": "Text with 6 digits for the error code. The first two digits indicate whether the error is a core honeybee error (00) vs. an extension error (any non-zero number). The second two digits indicate the nature of the error (00 is an identifier error, 01 is a geometry error, 02 is an adjacency error). The third two digits are used to give a unique ID to each condition moving upwards from more specific/detailed objects/errors to coarser/more abstract objects/errors.",
                        "maxLength": 6,
                        "minLength": 6,
                        "pattern": "([0-9]+)",
                        "type": "string"
                    },
                    "type": {
                        "description": "Text for the Honeybee extension from which the error originated (from the ExtensionTypes enumeration).",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExtensionTypes"
                            }
                        ],
                        "readOnly": true
                    },
                    "element_type": {
                        "description": "Text for the type of object that caused the error.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ObjectTypes"
                            }
                        ]
                    },
                    "element_id": {
                        "title": "Element Id",
                        "description": "Text string for the unique object ID that caused the error. Note that this can be the identifier of a core object like a Room or a Face. Or it can be for an extension object like a SensorGrid or a Construction.",
                        "maxLength": 100,
                        "minLength": 1,
                        "pattern": "^[^,;!\\n\\t]+$",
                        "type": "string"
                    },
                    "message": {
                        "title": "Message",
                        "description": "Text for the error message with a detailed description of what exactly is ivalid about the element.",
                        "type": "string"
                    },
                    "element_name": {
                        "title": "Element Name",
                        "description": "Display name of the object that caused the error.",
                        "type": "string"
                    },
                    "parents": {
                        "title": "Parents",
                        "description": "A list of the parent objects for the objet that caused the error. This can be useful for locating the problematic object in the model. This will contain 1 item for a Face with a perant Room. It will contain 2 for an Aperture that has a parent Face with a parent Room.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParentObject"
                        }
                    },
                    "top_parents": {
                        "title": "Top Parents",
                        "description": "A list of top-level parent objects for the specific case of duplicate child-object identifiers, where several top-level parents are involved.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParentObject"
                        }
                    }
                },
                "required": [
                    "code",
                    "type",
                    "element_type",
                    "element_id",
                    "message"
                ]
            },
            "ValidationReport": {
                "title": "ValidationReport",
                "type": "object",
                "properties": {
                    "honeybee_core": {
                        "title": "Honeybee Core",
                        "description": "Text string for the version of honeybee-core that performed the validation.",
                        "pattern": "([0-9]+)\\.([0-9]+)\\.([0-9]+)",
                        "type": "string"
                    },
                    "honeybee_schema": {
                        "title": "Honeybee Schema",
                        "description": "Text string for the version of honeybee-schema that performed the validation.",
                        "pattern": "([0-9]+)\\.([0-9]+)\\.([0-9]+)",
                        "type": "string"
                    },
                    "valid": {
                        "title": "Valid",
                        "description": "Boolean to note whether the Model is valid or not.",
                        "type": "boolean"
                    },
                    "fatal_error": {
                        "title": "Fatal Error",
                        "description": "A text string containing an exception if the Model failed to serialize. It will be an empty string if serialization was successful.",
                        "default": "",
                        "type": "string"
                    },
                    "errors": {
                        "title": "Errors",
                        "description": "A list of objects for each error that was discovered in the model. This will be an empty list or None if no errors were found.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        }
                    },
                    "type": {
                        "title": "Type",
                        "default": "ValidationReport",
                        "type": "string",
                        "pattern": "^ValidationReport$",
                        "readOnly": true
                    }
                },
                "required": [
                    "honeybee_core",
                    "honeybee_schema",
                    "valid"
                ]
            }
        }
    }
}