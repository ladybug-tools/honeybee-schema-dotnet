{
  "openapi": "3.0.2",
  "servers": [],
  "info": {
    "description": "Honeybee validation-report schema.",
    "version": "1.43.5",
    "title": "Honeybee Validation Report Schema",
    "contact": {
      "name": "Ladybug Tools",
      "email": "info@ladybug.tools",
      "url": "https://github.com/ladybug-tools/honeybee-schema"
    },
    "x-logo": {
      "url": "https://www.ladybug.tools/assets/img/honeybee-large.png",
      "altText": "Honeybee logo"
    },
    "license": {
      "name": "BSD",
      "url": "https://github.com/ladybug-tools-in2/honeybee-schema/blob/master/LICENSE"
    }
  },
  "externalDocs": {
    "description": "OpenAPI Specification with Inheritance",
    "url": "./validation-report_inheritance.json"
  },
  "tags": [
    {
      "name": "extensiontypes_model",
      "x-displayName": "ExtensionTypes",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ExtensionTypes\" />\n"
    },
    {
      "name": "objecttypes_model",
      "x-displayName": "ObjectTypes",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ObjectTypes\" />\n"
    },
    {
      "name": "parenttypes_model",
      "x-displayName": "ParentTypes",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ParentTypes\" />\n"
    },
    {
      "name": "validationerror_model",
      "x-displayName": "ValidationError",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ValidationError\" />\n"
    },
    {
      "name": "validationparent_model",
      "x-displayName": "ValidationParent",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ValidationParent\" />\n"
    },
    {
      "name": "validationreport_model",
      "x-displayName": "ValidationReport",
      "description": "<SchemaDefinition schemaRef=\"#/components/schemas/ValidationReport\" />\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Models",
      "tags": [
        "extensiontypes_model",
        "objecttypes_model",
        "parenttypes_model",
        "validationerror_model",
        "validationparent_model",
        "validationreport_model"
      ]
    }
  ],
  "paths": {},
  "components": {
    "schemas": {
      "ExtensionTypes": {
        "title": "ExtensionTypes",
        "description": "Types of Honeybee extensions.",
        "enum": [
          "Core",
          "Radiance",
          "Energy"
        ],
        "type": "string"
      },
      "ObjectTypes": {
        "title": "ObjectTypes",
        "description": "Types of Honeybee objects.",
        "enum": [
          "Shade",
          "Aperture",
          "Door",
          "SubFace",
          "Face",
          "Room",
          "SensorGrid",
          "View",
          "Modifier",
          "ModifierSet",
          "Material",
          "Construction",
          "ConstructionSet",
          "ScheduleTypeLimit",
          "Schedule",
          "ProgramType",
          "HVAC",
          "SHW"
        ],
        "type": "string"
      },
      "ParentTypes": {
        "title": "ParentTypes",
        "description": "Types of Honeybee objects that can be parents.",
        "enum": [
          "Aperture",
          "Door",
          "Face",
          "Room"
        ],
        "type": "string"
      },
      "ValidationParent": {
        "title": "ValidationParent",
        "type": "object",
        "properties": {
          "parent_type": {
            "description": "Text for the type of object that the parent is.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ParentTypes"
              }
            ]
          },
          "id": {
            "title": "Id",
            "description": "Text string for the unique ID of the parent object.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[.A-Za-z0-9_-]+$",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ValidationParent",
            "pattern": "^ValidationParent$",
            "type": "string",
            "readOnly": true
          },
          "name": {
            "title": "Name",
            "description": "Display name of the parent object.",
            "type": "string"
          }
        },
        "required": [
          "parent_type",
          "id"
        ]
      },
      "ValidationError": {
        "title": "ValidationError",
        "type": "object",
        "properties": {
          "code": {
            "title": "Code",
            "description": "Text with 6 digits for the error code. The first two digits indicate whether the error is a core honeybee error (00) vs. an extension error (any non-zero number). The second two digits indicate the nature of the error (00 is an identifier error, 01 is a geometry error, 02 is an adjacency error). The third two digits are used to give a unique ID to each condition moving upwards from more specific/detailed objects/errors to coarser/more abstract objects/errors. A full list of error codes can be found here: https://docs.pollination.cloud/user-manual/get-started/troubleshooting/help-with-modeling-error-codes",
            "maxLength": 6,
            "minLength": 6,
            "pattern": "([0-9]+)",
            "type": "string"
          },
          "error_type": {
            "title": "Error Type",
            "description": "A human-readable version of the error code, typically not more than five words long.",
            "type": "string"
          },
          "extension_type": {
            "description": "Text for the Honeybee extension from which the error originated (from the ExtensionTypes enumeration).",
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtensionTypes"
              }
            ]
          },
          "element_type": {
            "description": "Text for the type of object that caused the error.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ObjectTypes"
              }
            ]
          },
          "element_id": {
            "title": "Element Id",
            "description": "Text string for the unique object ID that caused the error. Note that this can be the identifier of a core object like a Room or a Face. Or it can be for an extension object like a SensorGrid or a Construction.",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[^,;!\\n\\t]+$",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "description": "Text for the error message with a detailed description of what exactly is invalid about the element.",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "default": "ValidationError",
            "pattern": "^ValidationError$",
            "type": "string",
            "readOnly": true
          },
          "element_name": {
            "title": "Element Name",
            "description": "Display name of the object that caused the error.",
            "type": "string"
          },
          "parents": {
            "title": "Parents",
            "description": "A list of the parent objects for the object that caused the error. This can be useful for locating the problematic object in the model. This will contain 1 item for a Face with a parent Room. It will contain 2 for an Aperture that has a parent Face with a parent Room.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationParent"
            }
          },
          "top_parents": {
            "title": "Top Parents",
            "description": "A list of top-level parent objects for the specific case of duplicate child-object identifiers, where several top-level parents are involved.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationParent"
            }
          }
        },
        "required": [
          "code",
          "error_type",
          "extension_type",
          "element_type",
          "element_id",
          "message"
        ]
      },
      "ValidationReport": {
        "title": "ValidationReport",
        "type": "object",
        "properties": {
          "honeybee_core": {
            "title": "Honeybee Core",
            "description": "Text string for the version of honeybee-core that performed the validation.",
            "pattern": "([0-9]+)\\.([0-9]+)\\.([0-9]+)",
            "type": "string"
          },
          "honeybee_schema": {
            "title": "Honeybee Schema",
            "description": "Text string for the version of honeybee-schema that performed the validation.",
            "pattern": "([0-9]+)\\.([0-9]+)\\.([0-9]+)",
            "type": "string"
          },
          "valid": {
            "title": "Valid",
            "description": "Boolean to note whether the Model is valid or not.",
            "type": "boolean"
          },
          "type": {
            "title": "Type",
            "default": "ValidationReport",
            "pattern": "^ValidationReport$",
            "type": "string",
            "readOnly": true
          },
          "fatal_error": {
            "title": "Fatal Error",
            "description": "A text string containing an exception if the Model failed to serialize. It will be an empty string if serialization was successful.",
            "default": "",
            "type": "string"
          },
          "errors": {
            "title": "Errors",
            "description": "A list of objects for each error that was discovered in the model. This will be an empty list or None if no errors were found.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        },
        "required": [
          "honeybee_core",
          "honeybee_schema",
          "valid"
        ]
      }
    }
  }
}